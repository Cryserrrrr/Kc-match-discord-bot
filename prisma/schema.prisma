// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Match {
  id              String   @id // PandaScore ID
  kcTeam          String   // KC team name (KC, KCB, KCBS, etc.)
  kcId            String   // KC team ID
  opponent        String   // Opponent team name
  opponentImage   String?  // Opponent team image URL
  leagueName      String   // League name
  leagueImage     String?  // League image URL
  serieName       String   // Serie name
  tournamentName  String   // Tournament name
  tournamentId    String?  // Tournament ID from PandaScore
  hasBracket      Boolean  @default(false) // Whether tournament has bracket format
  numberOfGames   Int      // Number of games in the match
  beginAt         DateTime // Match date/time
  status          String   @default("scheduled") // scheduled, live, finished, announced
  score           String?  // Match score (e.g., "2-1", "3-0")
  createdAt       DateTime @default(now())

  @@map("matches")
}

model StandingCache {
  id          String @id @default(cuid())
  tournamentId String // Tournament ID
  data        String // JSON string of standings/bracket data
  expiresAt   DateTime // Cache expiration time
  createdAt   DateTime @default(now())

  @@map("standing_cache")
}

model GuildSettings {
  guildId                    String @id
  channelId                  String // Discord channel ID
  pingRoles                  String[] @default([]) // Array of role IDs to ping
  filteredTeams              String[] @default([]) // Array of team IDs to filter matches
  enablePreMatchNotifications Boolean @default(true) // Enable/disable 30-minute pre-match notifications
  enableScoreNotifications    Boolean @default(true) // Enable/disable score notifications

  @@map("guild_settings")
} 